Here are some CGI scripts I was using to view and compare RTS style output.
It will probably need a little more tweaking to be useful to LTP.

Expectations:

  A directory that contains all output.  It expects file names in the format

  <host>.<ISO Date>.<suite>.<type>

 	<host>		The hostname the tests were run on
	<ISO Date>	ISO standard format date. i.e. YYYYmmDDHHMM
	<suite>		The name of the pan file that was used
	<type>		One of driver, scanner, or summary

			driver - the raw output from pan with <<<test_end>>>
			scanner - the output from scanner
            summary - a very brief table listing how many tests passed,
                      failed, didn't run, etc.  This wasn't released.

Scripts:

    results.cgi

        This lists out all of the results that are the results directory.  It
        provides links to the driver output, scanned results, and summary for
        each suite.  The sort order is host, date, suite.  On the results
        page, which looks at the .scanner files, there are links that extract
        the test tag output from the .driver file.

    browse.cgi

        This is a more complex form that I started working on.  It allows you
        to compare as many results as you want, side by side.  Also, I started
        working on sorting the results different ways, but didn't get too far.
        The side by side comparison is done with in reconsile.cgi

    reconsile.cgi

        This script compares multiple scanner files and shows the differences
        side by side in a table.  It expects to find .scanner files for the
        results it is comparing.

Notes:

    The driver I was using with these scripts collects some system information
    before running the tests.  I use this information to display the `uname
    -a` output in browse.cgi and reconsile.cgi.  You will be missing this
    information, but the scripts should still run.

    I apologize in advance for the use of Perl.  I've managed to steer clear
    of Perl for five years until I started writing these scripts.  IMHO, the
    people who learn programming with Perl write the ugliest code.  Luckily, I
    learned programming mostly with Pascal.  Hopefully the code makes sense.


--
Nate Straz                                              nstraz@sgi.com
sgi, inc                                           http://www.sgi.com/
Linux Test Project                                  http://ltp.sf.net/
