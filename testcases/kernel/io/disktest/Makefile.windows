# Used with MS Development Environment NMAKE
!IF "$(CFG)" == ""
CFG=disktest - Release
!MESSAGE No configuration specified. Defaulting to disktest - Release.
!ENDIF

!IF "$(CFG)" != "disktest - Release" && "$(CFG)" != "disktest - Debug"
!MESSAGE Invalid configuration "$(CFG)" specified.
!MESSAGE You can specify a configuration when running NMAKE
!MESSAGE by defining the macro CFG on the command line. For example:
!MESSAGE
!MESSAGE nmake /f "Makefile.windows" CFG="disktest - Debug"
!MESSAGE
!MESSAGE Possible choices for configuration are:
!MESSAGE
!MESSAGE "disktest - Release" (based on "(x86) Console Application")
!MESSAGE "disktest - Debug" (based on "(x86) Console Application")
!MESSAGE
!ERROR An invalid configuration is specified.
!ENDIF

!IF "$(OS)" == "Windows_NT"
NULL=
!ELSE
NULL=nul
!ENDIF

CPP=cl.exe
RSC=rc.exe

!IF  "$(CFG)" == "disktest - Release"

OUTDIR=.\Release
INTDIR=.\Release
# Begin Custom Macros
OutDir=.\Release
# End Custom Macros

ALL : "$(OUTDIR)\disktest.exe"


CLEAN :
	-@erase "$(INTDIR)\childmain.obj"
	-@erase "$(INTDIR)\childmain.sbr"
	-@erase "$(INTDIR)\dump.obj"
	-@erase "$(INTDIR)\dump.sbr"
	-@erase "$(INTDIR)\timer.obj"
	-@erase "$(INTDIR)\timer.sbr"
	-@erase "$(INTDIR)\stats.obj"
	-@erase "$(INTDIR)\stats.sbr"
	-@erase "$(INTDIR)\Getopt.obj"
	-@erase "$(INTDIR)\Getopt.sbr"
	-@erase "$(INTDIR)\globals.obj"
	-@erase "$(INTDIR)\globals.sbr"
	-@erase "$(INTDIR)\io.obj"
	-@erase "$(INTDIR)\io.sbr"
	-@erase "$(INTDIR)\main.obj"
	-@erase "$(INTDIR)\main.sbr"
	-@erase "$(INTDIR)\parse.obj"
	-@erase "$(INTDIR)\parse.sbr"
	-@erase "$(INTDIR)\sfunc.obj"
	-@erase "$(INTDIR)\sfunc.sbr"
	-@erase "$(INTDIR)\threading.obj"
	-@erase "$(INTDIR)\threading.sbr"
	-@erase "$(INTDIR)\usage.obj"
	-@erase "$(INTDIR)\usage.sbr"
	-@erase "$(INTDIR)\signals.obj"
	-@erase "$(INTDIR)\signals.sbr"
	-@erase "$(INTDIR)\vc*.*"
	-@erase "$(OUTDIR)\disktest.exe"

"$(OUTDIR)" :
    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"

CPP_PROJ=/nologo /W3 /Gs /MD /D"WIN32" /D"_WIN32_WINNT=0x0500" /D"WINDOWS" /D"NDEBUG" /D"_CONSOLE" /D"_MBCS" /FR"$(INTDIR)\\" /Fp"$(INTDIR)\disktest.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c

LINK=link.exe bufferoverflowu.lib Winmm.lib Ws2_32.lib
LINK_FLAGS=/nologo /subsystem:console /incremental:no /pdb:"$(OUTDIR)\disktest.pdb" /out:"$(OUTDIR)\disktest.exe"
LINK_OBJS= \
	"$(INTDIR)\childmain.obj" \
	"$(INTDIR)\timer.obj" \
	"$(INTDIR)\stats.obj" \
	"$(INTDIR)\Getopt.obj" \
	"$(INTDIR)\globals.obj" \
	"$(INTDIR)\io.obj" \
	"$(INTDIR)\main.obj" \
	"$(INTDIR)\parse.obj" \
	"$(INTDIR)\sfunc.obj" \
	"$(INTDIR)\threading.obj" \
	"$(INTDIR)\usage.obj" \
	"$(INTDIR)\dump.obj" \
	"$(INTDIR)\signals.obj"

"$(OUTDIR)\disktest.exe" : "$(OUTDIR)" $(LINK_OBJS)
    $(LINK) @<<
  $(LINK_FLAGS) $(LINK_OBJS)
<<

!ELSEIF  "$(CFG)" == "disktest - Debug"

OUTDIR=.\Debug
INTDIR=.\Debug
# Begin Custom Macros
OutDir=.\Debug
# End Custom Macros

ALL : "$(OUTDIR)\disktest.exe"

CLEAN :
	-@erase "$(INTDIR)\childmain.obj"
	-@erase "$(INTDIR)\childmain.sbr"
	-@erase "$(INTDIR)\dump.obj"
	-@erase "$(INTDIR)\dump.sbr"
	-@erase "$(INTDIR)\timer.obj"
	-@erase "$(INTDIR)\timer.obj"
	-@erase "$(INTDIR)\stats.sbr"
	-@erase "$(INTDIR)\stats.sbr"
	-@erase "$(INTDIR)\Getopt.obj"
	-@erase "$(INTDIR)\Getopt.sbr"
	-@erase "$(INTDIR)\globals.obj"
	-@erase "$(INTDIR)\globals.sbr"
	-@erase "$(INTDIR)\io.obj"
	-@erase "$(INTDIR)\io.sbr"
	-@erase "$(INTDIR)\main.obj"
	-@erase "$(INTDIR)\main.sbr"
	-@erase "$(INTDIR)\parse.obj"
	-@erase "$(INTDIR)\parse.sbr"
	-@erase "$(INTDIR)\sfunc.obj"
	-@erase "$(INTDIR)\sfunc.sbr"
	-@erase "$(INTDIR)\threading.obj"
	-@erase "$(INTDIR)\threading.sbr"
	-@erase "$(INTDIR)\usage.obj"
	-@erase "$(INTDIR)\usage.sbr"
	-@erase "$(INTDIR)\signals.obj"
	-@erase "$(INTDIR)\signals.sbr"
	-@erase "$(INTDIR)\vc*.*"
	-@erase "$(OUTDIR)\disktest.exe"
	-@erase "$(OUTDIR)\disktest.ilk"
	-@erase "$(OUTDIR)\disktest.pdb"

"$(OUTDIR)" :
    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"

CPP_PROJ=bufferoverflow.lib /nologo /MLd /W3 /Gm /GX /ZI /Od /MD /D"WIN32" /D"_WIN32_WINNT=0x0500" /D"WINDOWS" /D"_DEBUG" /D"_CONSOLE" /D "_MBCS" /FR"$(INTDIR)\\" /Fp"$(INTDIR)\disktest.pch" /YX /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /GZ /c

LINK=link.exe bufferoverflow.lib Winmm.lib Ws2_32.lib
LINK_FLAGS=/nologo /subsystem:console /pdb:"$(OUTDIR)\disktest.pdb" /out:"$(OUTDIR)\disktest.exe"
LINK_OBJS= \
	"$(INTDIR)\childmain.obj" \
	"$(INTDIR)\Getopt.obj" \
	"$(INTDIR)\globals.obj" \
	"$(INTDIR)\io.obj" \
	"$(INTDIR)\main.obj" \
	"$(INTDIR)\parse.obj" \
	"$(INTDIR)\sfunc.obj" \
	"$(INTDIR)\threading.obj" \
	"$(INTDIR)\usage.obj" \
	"$(INTDIR)\dump.obj" \
	"$(INTDIR)\timer.obj" \
	"$(INTDIR)\stats.obj" \
	"$(INTDIR)\signals.obj"

"$(OUTDIR)\disktest.exe" : "$(OUTDIR)" $(DEF_FILE) $(LINK_OBJS)
    $(LINK) @<<
  $(LINK_FLAGS) $(LINK_OBJS)
<<

!ENDIF

.c{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $<
<<

.c{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $<
<<

!IF "$(CFG)" == "disktest - Release" || "$(CFG)" == "disktest - Debug"

SOURCE=.\childmain.c

"$(INTDIR)\childmain.obj"	"$(INTDIR)\childmain.sbr" : $(SOURCE) "$(INTDIR)"

SOURCE=.\dump.c

"$(INTDIR)\dump.obj"	"$(INTDIR)\dump.sbr" : $(SOURCE) "$(INTDIR)"

SOURCE=.\timer.c

"$(INTDIR)\timer.obj"	"$(INTDIR)\timer.sbr" : $(SOURCE) "$(INTDIR)"

SOURCE=.\stats.c

"$(INTDIR)\stats.obj"	"$(INTDIR)\stats.sbr" : $(SOURCE) "$(INTDIR)"

SOURCE=.\Getopt.c

"$(INTDIR)\Getopt.obj"	"$(INTDIR)\Getopt.sbr" : $(SOURCE) "$(INTDIR)"

SOURCE=.\globals.c

"$(INTDIR)\globals.obj"	"$(INTDIR)\globals.sbr" : $(SOURCE) "$(INTDIR)"

SOURCE=.\io.c

"$(INTDIR)\io.obj"	"$(INTDIR)\io.sbr" : $(SOURCE) "$(INTDIR)"

SOURCE=.\main.c

"$(INTDIR)\main.obj"	"$(INTDIR)\main.sbr" : $(SOURCE) "$(INTDIR)"

SOURCE=.\parse.c

"$(INTDIR)\parse.obj"	"$(INTDIR)\parse.sbr" : $(SOURCE) "$(INTDIR)"

SOURCE=.\sfunc.c

"$(INTDIR)\sfunc.obj"	"$(INTDIR)\sfunc.sbr" : $(SOURCE) "$(INTDIR)"

SOURCE=.\threading.c

"$(INTDIR)\threading.obj"	"$(INTDIR)\threading.sbr" : $(SOURCE) "$(INTDIR)"

SOURCE=.\usage.c

"$(INTDIR)\usage.obj"	"$(INTDIR)\usage.sbr" : $(SOURCE) "$(INTDIR)"

SOURCE=.\signals.c

"$(INTDIR)\signals.obj"	"$(INTDIR)\signals.sbr" : $(SOURCE) "$(INTDIR)"

!ENDIF

