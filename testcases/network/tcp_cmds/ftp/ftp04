#!/bin/sh
#
#   Copyright (c) International Business Machines  Corp., 2003, 2005
#
#   This program is free software;  you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY;  without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
#   the GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program;  if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
#
#
#  FILE   : ftp
#
#  PURPOSE: Tests to see if ftp rejects a 'root' login attempt.
#
#  SETUP: The program `/usr/bin/expect' MUST be installed.
#
#  HISTORY:
#   03/04/03 Jerone Young (jeroney@us.ibm.com)
#   09/21/05 Kris Wilson (krisw@us.ibm.com) Check if vsftpd is on system.

#-----------------------------------------------------------------------
# FUNCTION:  do_setup
#-----------------------------------------------------------------------

do_setup()
{

    tvar=${MACHTYPE%-*}
    tvar=${tvar#*-}

    RHOST=localhost
    TEST_USER=root

    tst_setup

    if [ -n "$PASSWD" ]; then
        TEST_USER_PASSWORD=$PASSWD
    else
        end_testcase "You must set your password via the PASSWD variable."
        exit 1
    fi

    exists awk expect ftp vsftpd

    if [ $tvar = "redhat" -o $tvar = "redhat-linux" ]; then
        echo "Verifying test user $TEST_USER is in /etc/vsftpd.ftpusers database..."
        FTPUSERS=$(awk "/$TEST_USER/" /etc/vsftpd.ftpusers)
    else
        echo "Verifying test user $TEST_USER is in /etc/ftpusers database..."
        FTPUSERS=$(awk "/$TEST_USER/" /etc/ftpusers)
    fi
    if [ -z "$FTPUSERS" ] ; then
        end_testcase "Test user $TEST_USER not found in /etc/ftpusers unable to run TEST, exiting 0 ..."
    fi

}

#-----------------------------------------------------------------------
# FUNCTION:  do_test
#-----------------------------------------------------------------------
do_test()
{

    tst_resm TINFO "Ftp should reject $TEST_USER from loging in successfully"
    expect -c "
        spawn ftp $RHOST
        sleep 1
        expect -re \": \"
        send \"$TEST_USER\r\"
        expect -re \"Password:\"
        send \"$TEST_USER_PASSWD\r\"
        expect {
            # 230 - Login successful
            \"230\" {send_user \"==> TEST \#$TEST : FAIL (ftp allowed login attempt)\n\";exit 1}
            # 530 - Login failed
            \"530\" {send_user \"==> TEST \#$TEST : PASS (ftp rejected login attempt)\n\";exit 0}
        }
        expect \"ftp> \"
        send \"quit\r\"
    "

    [ $? -eq 0 ] || end_testcase "Testcase failed."

}

#----------------------------------------------------------------------
# FUNCTION: MAIN
#----------------------------------------------------------------------
. net_cmdlib.sh

read_opts $*
do_setup
do_test
end_testcase
