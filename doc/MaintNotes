Welcome to ltp community.

We are in process of changing our sf.net host repository to
GIT from CVS.[ Any input/discussion on this is highly appreciable ]. If
possible this month end release may get delayed based on responses from
list or next month end (i.e: March ) release will be based on git tree.

I usually try to read all patches posted to ltp mailing list, and follow
almost all discussions on list, unless the topic is about an obscure
corner that i do not personally use. But i am obviously not perfect.If
you sent a patch that you did not hear from anybody for three days,
that is a very good indication that it was dropped on the floor --- please
do not hesitate to remind me.

The list archive is available at:

http://marc.info/?l=ltp-list&r=1&w=2


Please use this public site to point out messages in mailing list if you
want to remind someone or again start same thread without altering
subject line.

Now coming to git transformation this month, you can find gitweb
interface at :

http://ltp.git.sourceforge.net/git/gitweb.cgi?p=ltp/ltp.git;a=summary

The master branch is meant to contain what are very well tested and
ready to be used in production environment. There could occasionally be
minor breakage but they are not expected to be anything major, and more
importantly those will be quickly and trivially fixable.

So if some hotfixes has gone with this branch, you can find one more
digit has been added to version release (e.g: YYYYMMDD.1 ), So it means
it is more stable than YYYYMMDD release. I may be changing this format
if i can see a better format or if you have some suggestion then it is
most welcome.

NOTE:
=====
So i always encourage testcase developer/ltp-list member to send me the
patches against this branch. And it will be closely reviewed and
acknowledged by any member from ltp-list community members. Once it gets
Acked/Reveiwed-By then it will promoted to maint branch for maintainer
testing and checking for stability, otherwise it will go to "pu" branch
for further discussion and decision. These pending patch can be worked
on following month and once it is mature enough to meet the stability
then it can be directly jump to maint branch, here i may ask the
submitter to submit the patch once again against maint branch.

"pu" branch is basically "proposed update" branch which will contain all
the remainder of above branches. By the above definition of how "next"
works, you can tell that this branch will contain quite experimental and
obviously broken stuff.

I would like to thanks everybody who helped me to release ltp git into
current shape. Especially i would like to thank following:
    - git.git from where actually i picked up this branch
      identification.
    - Garrett, who has worked with me step by step to release this git
      tree implementation to ltp-list@.
    - All my team member from IBM who basically gave encourageable
      input and specially Aneesh, Subrata, Iranna & kamalesh.
    - And finally to Linux kernel, who motivated me to maintain such a
      testsuits with git.


Usage:

# git clone git://ltp.git.sourceforge.net/gitroot/ltp/ltp.git
(Make sure you have the latest autoconf/automake before running make
autotools )
# make autotools
# ./configure
# make
# make install
# cd /opt/ltp
# ./runltp

Please do not hesitate to reply this mail if you have any query in your
mind, it may help me to generate a good FAQ :) .

Happy Testing!!!
