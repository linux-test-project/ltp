#DESCRIPTION:Math library tests - CPU tests
abs01 abs01

atof01 atof01

float_bessel cd $LTPROOT/testcases/bin; float_bessel -v
float_exp_log cd $LTPROOT/testcases/bin; float_exp_log -v
float_iperb cd $LTPROOT/testcases/bin; float_iperb -v
float_power cd $LTPROOT/testcases/bin; float_power -v
float_trigo cd $LTPROOT/testcases/bin; float_trigo -v

fptest01 fptest01
fptest02 fptest02

nextafter01 nextafter01

#DESCRIPTION:fsx filesystem stress tests
fsx-linux export TCbin=$LTPROOT/testcases/bin;fsxtest02 10000
#fsx-ext2 fsxtest $SCRATCHDEV ext2 10000
#fsx-ext3 fsxtest $SCRATCHDEV ext3 10000
#fsx-jfs fsxtest $SCRATCHDEV jfs 10000
#fsx-xfs  fsxtest $SCRATCHDEV xfs 10000
#fsx-reiserfs fsxtest $SCRATCHDEV reiserfs 10000

#DESCRIPTION:Interprocess communication stress
# These tests use tests/pipeio to put pipes (named or unnamed) through a workout
#
pipeio_1 pipeio -T pipeio_1 -c 5 -s 4090 -i 100 -b -f x80
# spawns 5 children to write 100 chunks of 4090 bytes to a named pipe
# using blocking I/O
#pipeio_2 pipeio -T pipeio_2 -c 5 -s 4090 -i 100 -f x80
# spawns 5 children to write 100 chunks of 4090 bytes to a named pipe
# using non-blocking I/O
# This test hits EAGAIN, which pipeio doesn't handle at the moment
pipeio_3 pipeio -T pipeio_3 -c 5 -s 4090 -i 100 -u -b -f x80
# spawns 5 children to write 100 chunks of 4090 bytes to an unnamed pipe
# using blocking I/O
pipeio_4 pipeio -T pipeio_4 -c 5 -s 4090 -i 100 -u -f x80
# spawns 5 children to write 100 chunks of 4090 bytes to an unnamed pipe
# using non-blocking I/O
pipeio_5 pipeio -T pipeio_5 -c 5 -s 5000 -i 10 -b -f x80
# spawns 5 children to write 10 chunks of 5000 bytes to a named pipe
# using blocking I/O
pipeio_6 pipeio -T pipeio_6 -c 5 -s 5000 -i 10 -b -u -f x80
# spawns 5 children to write 10 chunks of 5000 bytes to an unnamed pipe
# using blocking I/O
#pipeio_7 pipeio -T pipeio_7 -c 5 -s 5000 -i 10 -f x80
# spawns 5 children to write 10 chunks of 5000 bytes to a named pipe
# using non-blocking I/O
# This test hits EAGAIN, which pipeio doesn't handle at the moment
pipeio_8 pipeio -T pipeio_8 -c 5 -s 5000 -i 10 -u -f x80
# spawns 5 children to write 10 chunks of 5000 bytes to an unnamed pipe
# using non-blocking I/O

sem01 sem01
sem02 sem02


#DESCRIPTION:Kernel system calls
abort01 ulimit -c 1024;abort01

accept01 accept01

access01 access01
access02 access02
access03 access03
access04 access04
access05 access05

acct01 acct01
acct02 acct02

adjtimex01 adjtimex01
adjtimex02 adjtimex02

alarm01 alarm01
alarm02 alarm02
alarm03 alarm03
alarm05 alarm05
alarm06 alarm06
alarm07 alarm07

asyncio02 asyncio02

bind01 bind01
bind02 bind02

brk01 brk01

capget01 capget01
capget02 capget02

capset01 capset01
capset02 capset02

chdir01 chdir01
chdir01A symlink01 -T chdir01
chdir02 chdir02
chdir03 chdir03
chdir04 chdir04

chmod01 chmod01
chmod01A symlink01 -T chmod01
chmod02 chmod02
chmod03 chmod03
chmod04 chmod04
chmod05 cp -p $LTPROOT/testcases/bin/change_owner $TMPDIR;chmod05
chmod06 cp -p $LTPROOT/testcases/bin/change_owner $TMPDIR;chmod06
chmod07 chmod07

chown01 chown01
chown02 chown02
chown03 export change_owner=$LTPROOT/testcases/bin/change_owner;chown03
chown04 cp -p $LTPROOT/testcases/bin/change_owner $TMPDIR;chown04
chown05 chown05

chroot01 chroot01
chroot02 chroot02
chroot03 chroot03
chroot04 chroot04


clone01 clone01
clone02 clone02
clone03 clone03
clone04 clone04
clone05 clone05
clone06 clone06
clone07 clone07

close01 close01
close02 close02
close08 close08

confstr01 confstr01

connect01 connect01

creat01 creat01
creat03 creat03
creat04 creat04
creat05 creat05
creat06 creat06
creat07 creat07
creat08 creat08
creat09 creat09

dup01 dup01
dup02 dup02
dup03 dup03
dup04 dup04
dup05 dup05
dup06 dup06
dup07 dup07

dup201 dup201
dup202 dup202
dup203 dup203
dup204 dup204
dup205 dup205

execl01 execl01
execle01 execle01
execlp01 execlp01

execv01 execv01
execve01 execve01
execve02 execve02 -F $LTPROOT/testcases/bin/test3
execve03 execve03
execve04 execve04 -F $LTPROOT/testcases/bin/test3
execve05 execve05 20 $LTPROOT/testcases/bin/execve05 $LTPROOT/testcases/bin/execve05 4
execvp01 execvp01

exit01 exit01
exit02 exit02

fchdir01 fchdir01
fchdir02 fchdir02
fchdir03 fchdir03

fchmod01 fchmod01
fchmod02 fchmod02
fchmod03 fchmod03
fchmod04 fchmod04
fchmod05 cp -p $LTPROOT/testcases/bin/change_owner $TMPDIR;fchmod05
fchmod06 cp -p $LTPROOT/testcases/bin/change_owner $TMPDIR;fchmod06
fchmod07 fchmod07

fchown01 fchown01
fchown02 fchown02
fchown03 cp -p $LTPROOT/testcases/bin/change_owner $TMPDIR;fchown03
fchown04 export change_owner=$LTPROOT/testcases/bin/change_owner;fchown04
fchown05 fchown05

fcntl01 fcntl01
fcntl02 fcntl02
fcntl03 fcntl03
fcntl04 fcntl04
fcntl05 fcntl05
fcntl06 fcntl06
fcntl07 fcntl07
fcntl07B fcntl07B
fcntl08 fcntl08
fcntl09 fcntl09
fcntl10 fcntl10
fcntl11 fcntl11
fcntl12 fcntl12
fcntl13 fcntl13
fcntl14 fcntl14
fcntl15 fcntl15
#fcntl16 fcntl16 #Contains errors.
fcntl17 fcntl17
fcntl18 fcntl18
fcntl19 fcntl19
fcntl20 fcntl20
fcntl21 fcntl21
fcntl22 fcntl22
fcntl23 fcntl23
fcntl24 fcntl24
fcntl25 fcntl25
fcntl26 fcntl26
# The tests for these system calls  fcntl27 and fcntl28 are temporarily being disabled
# fcntl27 fcntl27
# fcntl28 fcntl28

fdatasync01 fdatasync01
fdatasync02 fdatasync02

flock01 flock01
flock02 flock02
flock03 flock03
flock04 flock04
flock05 flock05
flock06 flock06

fmtmsg01 fmtmsg01

fork01 fork01
fork02 fork02
fork03 fork03
fork04 fork04
fork05 fork05
fork06 fork06
fork07 fork07
fork08 fork08
fork09 fork09
fork10 fork10
fork11 fork11

fpathconf01 fpathconf01

fstat01 fstat01
fstat02 fstat02
fstat03 fstat03
fstat04 fstat04
fstat05 fstat05

fstatfs01 fstatfs01
fstatfs02 fstatfs02

fsync01 fsync01
fsync02 fsync02
fsync03 fsync03

ftruncate01 ftruncate01
ftruncate02 ftruncate02
ftruncate03 ftruncate03
ftruncate04 ftruncate04

getcontext01 getcontext01

getcwd01 getcwd01
getcwd02 getcwd02
getcwd03 getcwd03

getdents01 getdents01
getdents02 getdents02
getdents03 getdents03
getdents04 getdents04

getdomainname01 getdomainname01

getdtablesize01 getdtablesize01

getegid01 getegid01

geteuid01 geteuid01

getgid01 getgid01
getgid03 getgid03

getgroups01 getgroups01
getgroups02 getgroups02
getgroups03 getgroups03
getgroups04 getgroups04

gethostid01 gethostid01

gethostname01 gethostname01

getitimer01 getitimer01
getitimer02 getitimer02
getitimer03 getitimer03

getpeername01 getpeername01

getpgid01 getpgid01
getpgid02 getpgid02

getpgrp01 getpgrp01

getpid01 getpid01
getpid02 getpid02

getppid01 getppid01
getppid02 getppid02

getpriority01 getpriority01
getpriority02 getpriority02

getresgid01 getresgid01
getresgid02 getresgid02
getresgid03 getresgid03

getresuid01 getresuid01
getresuid02 getresuid02
getresuid03 getresuid03

getrlimit01 getrlimit01
getrlimit02 getrlimit02

getrusage01 getrusage01
getrusage02 getrusage02

getsid01 getsid01
getsid02 getsid02

getsockname01 getsockname01

getsockopt01 getsockopt01

gettimeofday01 gettimeofday01
gettimeofday02 gettimeofday02

getuid01 getuid01
getuid02 getuid02
getuid03 getuid03

#Needs tty device.
#ioctl01 ioctl01 -D /dev/tty0
#ioctl02 ioctl02 -D /dev/tty0

# Introducing ioctl tests for all /dev/tty* devices
ioctl test_ioctl

ioperm01 ioperm01
ioperm02 ioperm02

iopl01 iopl01
iopl02 iopl02

kill01 kill01
kill02 kill02
kill03 kill03
kill04 kill04
kill05 kill05
kill06 kill06
kill07 kill07
kill08 kill08
kill09 kill09
kill10 kill10
kill11 ulimit -c 1024;kill11
kill12 kill12

lchown01 lchown01
lchown02 lchown02

link01 symlink01 -T link01
link02 link02
link03 link03
link04 link04
link05 link05
link06 link06
link07 link07

listen01 listen01

llseek01 llseek01
llseek02 llseek02

lseek01 lseek01
lseek02 lseek02
lseek03 lseek03
lseek04 lseek04
lseek05 lseek05
lseek06 lseek06
lseek07 lseek07
lseek08 lseek08
lseek09 lseek09
lseek10 lseek10

lstat01A symlink01 -T lstat01
lstat01 lstat01
lstat02 lstat02
lstat03 lstat03

mallopt01 mallopt01

memset01 memset01
memcmp01 memcmp01
memcpy01 memcpy01

mlockall01 mlockall01
mlockall02 mlockall02
mlockall03 mlockall03

mkdir01 mkdir01
mkdir02 mkdir02
mkdir03 mkdir03
mkdir04 mkdir04
mkdir05 mkdir05
mkdir05A symlink01 -T mkdir05
mkdir08 mkdir08
mkdir09 mkdir09

mknod01 mknod01
mknod02 mknod02
mknod03 mknod03
mknod04 mknod04
mknod05 mknod05
mknod06 mknod06
mknod07 mknod07
mknod08 mknod08
mknod09 mknod09

mlock01 mlock01
mlock02 mlock02

qmm01 mmap001 -m 1
mmap01 mmap01
mmap02 mmap02
mmap03 mmap03
mmap04 mmap04
mmap05 mmap05
mmap06 mmap06
mmap07 mmap07
mmap08 mmap08
mmap09 mmap09

modify_ldt01 modify_ldt01
modify_ldt02 modify_ldt02

#
# These tests require an unmounted block device
# to run correctly. Please see individual test
# code for more information.
#
#mount01 mount01 -D /dev/...
#mount02 mount02 -D /dev/...
#mount03 mount03 -D /dev/...
#mount04 mount04 -D /dev/...

mprotect01 mprotect01
mprotect02 mprotect02
mprotect03 mprotect03

mremap01 mremap01
mremap02 mremap02
mremap03 mremap03
mremap04 mremap04

msgctl01 msgctl01
msgctl02 msgctl02
msgctl03 msgctl03
msgctl04 msgctl04
msgctl05 msgctl05
msgctl06 msgctl06
msgctl07 msgctl07
msgctl08 msgctl08
msgctl09 msgctl09

msgget01 msgget01
msgget02 msgget02
msgget03 msgget03
msgget04 msgget04

msgrcv01 msgrcv01
msgrcv02 msgrcv02
msgrcv03 msgrcv03
msgrcv04 msgrcv04
msgrcv05 msgrcv05
msgrcv06 msgrcv06

msgsnd01 msgsnd01
msgsnd02 msgsnd02
msgsnd03 msgsnd03
msgsnd04 msgsnd04
msgsnd05 msgsnd05
msgsnd06 msgsnd06

msync01 msync01
msync02 msync02
msync03 msync03
msync04 msync04
msync05 msync05

munlock01 munlock01
munlock02 munlock02

munlockall01 munlockall01
munlockall02 munlockall02

munmap01 munmap01
munmap02 munmap02
munmap03 munmap03

nanosleep01 nanosleep01
nanosleep02 nanosleep02
nanosleep03 nanosleep03
nanosleep04 nanosleep04

nftw01 nftw01
nftw6401 nftw6401

nice01 nice01
nice02 nice02
nice03 nice03
nice04 nice04
nice05 nice05

open01 open01
open01A symlink01 -T open01
open02 open02
open03 open03
open04 open04
open05 open05
open06 open06
open07 open07
open08 open08
open09 open09
open10 open10

mincore01 mincore01
#mincore02 mincore02 currently hangs and does not exit correctly
madvise01 madvise01
madvise02 madvise02

pathconf01 pathconf01

pause01 pause01
pause02 pause02
pause03 pause03

#  The personality() system call is poorly documented
#  and difficult to figure out how to use by looking
#  at the different architecture specific kernel files.
#personality01 personality01
#personality02 personality02

pipe01 pipe01
pipe02 pipe02
pipe03 pipe03
pipe04 pipe04
pipe05 pipe05
pipe06 pipe06
pipe07 pipe07
pipe08 pipe08
pipe09 pipe09
pipe10 pipe10
pipe11 pipe11

poll01 poll01

prctl01 prctl01
prctl02 prctl02

pread01 pread01
pread02 pread02
pread03 pread03

profil01 profil01

pselect01 pselect01

ptrace01 ptrace01
ptrace02 ptrace02
ptrace03 ptrace03
ptrace05 ptrace05

pwrite01 pwrite01
pwrite02 pwrite02
pwrite03 pwrite03
pwrite04 pwrite04

pwrite01_64 pwrite01_64
pwrite02_64 pwrite02_64
pwrite03_64 pwrite03_64
pwrite04_64 pwrite04_64

read01 read01
read02 read02
read03 read03
read04 read04

readdir01 readdir01
readdir02 readdir02

readlink01A symlink01 -T readlink01
readlink01 readlink01
readlink02 readlink02
readlink03 readlink03
readlink04 cp -f $LTPROOT/testcases/bin/creat_slink $TMPDIR; readlink04

readv01 readv01
readv02 readv02
readv03 readv03

reboot01 reboot01
reboot02 reboot02

recv01 recv01

recvfrom01 recvfrom01

recvmsg01 recvmsg01

rename01 rename01
rename01A symlink01 -T rename01
rename02 rename02
rename03 rename03
rename04 rename04
rename05 rename05
rename06 rename06
rename07 rename07
rename08 rename08
rename09 rename09
rename10 rename10
rename12 rename12
rename13 rename13
rename14 rename14

rmdir01 rmdir01
rmdir02 rmdir02
rmdir03 rmdir03
rmdir03A symlink01 -T rmdir03
rmdir04 rmdir04
rmdir05 rmdir05

sbrk01 sbrk01

sched_get_priority_max01 sched_get_priority_max01
sched_get_priority_max02 sched_get_priority_max02

sched_get_priority_min01 sched_get_priority_min01
sched_get_priority_min02 sched_get_priority_min02

sched_getparam01 sched_getparam01
sched_getparam02 sched_getparam02
sched_getparam03 sched_getparam03

sched_rr_get_interval01 sched_rr_get_interval01
sched_rr_get_interval02 sched_rr_get_interval02
sched_rr_get_interval03 sched_rr_get_interval03

sched_setparam01 sched_setparam01
sched_setparam02 sched_setparam02
sched_setparam03 sched_setparam03
sched_setparam04 sched_setparam04
sched_setparam05 sched_setparam05

sched_getscheduler01 sched_getscheduler01
sched_getscheduler02 sched_getscheduler02

sched_setscheduler01 sched_setscheduler01
sched_setscheduler02 sched_setscheduler02

sched_yield01 sched_yield01

select01 select01
select02 select02
select03 select03

semctl01 semctl01
semctl02 semctl02
semctl03 semctl03
semctl04 semctl04
semctl05 semctl05
semctl06 semctl06
semctl07 semctl07

semget01 semget01
semget02 semget02
semget03 semget03
semget05 semget05
semget06 semget06

semop01 semop01
semop02 semop02
semop03 semop03
semop04 semop04
semop05 semop05

send01 send01

sendfile02 sendfile02
sendfile03 sendfile03

sendmsg01 sendmsg01

sendto01 sendto01

setdomainname01	setdomainname01
setdomainname02	setdomainname02
setdomainname03	setdomainname03

setfsgid01 setfsgid01
setfsgid02 setfsgid02
setfsgid03 setfsgid03

setfsuid01 setfsuid01
setfsuid02 setfsuid02
setfsuid03 setfsuid03
setfsuid04 setfsuid04

setgid01 setgid01
setgid02 setgid02
setgid03 setgid03

setegid01 setegid01

setgroups01 setgroups01
setgroups02 setgroups02
setgroups03 setgroups03
setgroups04 setgroups04

sethostname01 sethostname01
sethostname02 sethostname02
sethostname03 sethostname03

setitimer01 setitimer01
setitimer02 setitimer02
setitimer03 setitimer03

setpgid01 setpgid01
setpgid02 setpgid02
setpgid03 setpgid03

setpgrp01 setpgrp01
setpgrp02 setpgrp02

setpriority01 setpriority01
setpriority02 setpriority02
setpriority03 setpriority03
setpriority04 setpriority04
setpriority05 setpriority05

setregid01 setregid01
setregid02 setregid02
setregid03 setregid03
setregid04 setregid04

setresgid01 setresgid01
setresgid02 setresgid02
setresgid03 setresgid03

setresuid01 setresuid01
setresuid02 setresuid02
setresuid03 setresuid03
setresuid04 setresuid04

setreuid01 setreuid01
setreuid02 setreuid02
setreuid03 setreuid03
setreuid04 setreuid04
setreuid05 setreuid05
setreuid06 setreuid06
setreuid07 setreuid07

setrlimit01 setrlimit01
setrlimit02 setrlimit02
setrlimit03 setrlimit03

setsid01 setsid01

setsockopt01 setsockopt01

settimeofday01 settimeofday01
settimeofday02 settimeofday02

setuid01 setuid01
setuid02 setuid02
setuid03 setuid03
setuid04 setuid04

shmat01 shmat01
shmat02 shmat02
shmat03 shmat03

shmctl01 shmctl01
shmctl02 shmctl02
shmctl03 shmctl03
shmctl04 shmctl04

shmdt01 shmdt01
shmdt02 shmdt02

shmget01 shmget01
shmget02 shmget02
shmget03 shmget03
shmget04 shmget04
shmget05 shmget05

sigaction01 sigaction01
sigaction02 sigaction02

sigaltstack01 sigaltstack01
sigaltstack02 sigaltstack02


sighold02 sighold02

signal01 signal01
signal02 signal02
signal03 signal03
signal04 signal04
signal05 signal05

sigpending02 sigpending02

sigprocmask01 sigprocmask01

sigrelse01 sigrelse01

sigsuspend01 sigsuspend01


socket01 socket01

socketcall01 socketcall01
socketcall02 socketcall02
socketcall03 socketcall03
socketcall04 socketcall04

socketpair01 socketpair01

sockioctl01 sockioctl01

stat01 stat01
stat02 stat02
stat03 stat03
stat04 symlink01 -T stat04
stat05 stat05
stat06 stat06

statfs01 statfs01
statfs02 statfs02
statfs03 statfs03

statvfs01 statvfs01

# This syscall is obsoleted by settimeofday.
#stime01 stime01
#stime02 stime02

string01 string01

swapoff01 swapoff01
swapoff02 swapoff02

swapon01 swapon01
swapon02 swapon02
swapon03 swapon03

symlink01 symlink01
symlink02 symlink02
symlink03 symlink03
symlink04 symlink04
symlink05 symlink05

sync01 sync01
sync02 sync02

syscall01 syscall01

sysconf01 sysconf01

sysctl01 sysctl01
sysctl03 sysctl03
sysctl04 sysctl04
sysctl05 sysctl05

sysfs01 sysfs01
sysfs02 sysfs02
sysfs03 sysfs03
sysfs04 sysfs04
sysfs05 sysfs05
sysfs06 sysfs06

sysinfo01 sysinfo01
sysinfo02 sysinfo02

syslog01 syslog01
syslog02 syslog02
syslog03 syslog03
syslog04 syslog04
syslog05 syslog05
syslog06 syslog06
syslog07 syslog07
syslog08 syslog08
syslog09 syslog09
syslog10 syslog10
syslog11 syslog11
syslog12 syslog12

# This syscall is obsoleted by gettimeofday.
# time01 time01
# time02 time02

times01 times01
times03 times03

truncate01 truncate01
truncate02 truncate02
truncate03 truncate03
truncate04 truncate04

# This syscall is obsolete.  The latest glibc does not even
# include the ulimit.h file anymore.  The test will fail
# because the error handling has been simplified.
#
# ulimit01 ulimit01

umask01 umask01
umask02 umask02
umask03 umask03

uname01 uname01
uname02 uname02
uname03 uname03

unlink01 symlink01 -T unlink01
unlink05 unlink05
unlink06 unlink06
unlink07 unlink07
unlink08 unlink08

#
# These tests require an unmounted block device
# to run correctly. Please see individual test
# code for more information.
#
#umount01 umount01 -D /dev/...
#umount02 umount02 -D /dev/...
#umount03 umount03 -D /dev/...

ustat01 ustat01
ustat02 ustat02

utime01 utime01
utime01A symlink01 -T utime01
utime02 utime02
utime03 utime03
utime04 utime04
utime05 utime05
utime06 utime06

vfork01 vfork01
vfork02 vfork02

vhangup01 vhangup01
vhangup02 vhangup02

wait02 wait02

wait401 wait401
wait402 wait402

waitpid01 waitpid01
waitpid02 waitpid02
waitpid03 waitpid03
waitpid04 waitpid04
waitpid05 waitpid05
waitpid06 waitpid06
waitpid07 waitpid07
waitpid08 waitpid08
waitpid09 waitpid09
waitpid10 waitpid10 5
waitpid11 waitpid11
waitpid12 waitpid12
waitpid13 waitpid13

write01 write01
write02 write02
write03 write03
write04 write04
write05 write05

writev01 writev01
writev02 writev02
writev03 writev03
writev04 writev04
writev05 writev05
writev06 writev06

#DESCRIPTION:Memory Mgmt tests
mm01 mmap001 -m 10000
# 40 Mb mmap() test.
# Creates a 10000 page mmap, touches all of the map, sync's it, and
# munmap()s it.
mm02 mmap001
# simple mmap() test.
#mm03 mmap001 -i 0 -I 1 -m 100
# repetitive mmapping test.
# Creates a one page map repetitively for one minute.

mtest01 mtest01 -p80
mtest01w mtest01 -p80 -w

#test for race conditions
mtest05 mmstress
mtest06 mmap1 -x 0.05

mem01 mem01
mem02 mem02

page01 page01
page02 page02

data_space data_space
stack_space stack_space

shmt02 shmt02
shmt03 shmt03
shmt04 shmt04
shmt05 shmt05
shmt06 shmt06
shmt07 shmt07
shmt08 shmt08
shmt09 shmt09
shmt10 shmt10

#DESCRIPTION:Scheduler Stress Tests
pth_str01 pth_str01
pth_str02 pth_str02 -n1000
pth_str03 pth_str03

#DESCRIPTION:Native POSIX Thread Library (NPTL) Tests
nptl01 nptl01

#DESCRIPTION:Terminal type stress
pty01 pty01
ptem01 ptem01
hangup01 hangup01

#DESCRIPTION:Filesystem stress tests
gf01 growfiles -W gf01 -b -e 1 -u -i 0 -L 20 -w -C 1 -l -I r -T 10 glseek20 glseek20.2
gf02 growfiles -W gf02 -b -e 1 -L 10 -i 100 -I p -S 2 -u -f gf03_
gf03 growfiles -W gf03 -b -e 1 -g 1 -i 1 -S 150 -u -f gf05_
#gf04 growfiles -W gf04 -b -e 1 -g 4090 -i 500 -t 39000 -u -f gf06_
#gf05 growfiles -W gf05 -b -e 1 -g 5000 -i 500 -t 49900 -T10 -c9 -I p -u -f gf07_
gf06 growfiles -W gf06 -b -e 1 -u -r 1-5000 -R 0--1 -i 0 -L 30 -C 1 g_rand10 g_rand10.2
gf07 growfiles -W gf07 -b -e 1 -u -r 1-5000 -R 0--2 -i 0 -L 30 -C 1 -I p g_rand13 g_rand13.2
#gf08 growfiles -W gf08 -b -e 1 -u -r 1-5000 -R 0--2 -i 0 -L 30 -C 1 g_rand11 g_rand11.2
#gf09 growfiles -W gf09 -b -e 1 -u -r 1-5000 -R 0--1 -i 0 -L 30 -C 1 -I p g_rand12 g_rand12.2
gf10 growfiles -W gf10 -b -e 1 -u -r 1-5000 -i 0 -L 30 -C 1 -I l g_lio14 g_lio14.2
gf11 growfiles -W gf11 -b -e 1 -u -r 1-5000 -i 0 -L 30 -C 1 -I L g_lio15 g_lio15.2
gf12 mkfifo gffifo17; growfiles -b -W gf12 -e 1 -u -i 0 -L 30 gffifo17
gf13 mkfifo gffifo18; growfiles -b -W gf13 -e 1 -u -i 0 -L 30 -I r -r 1-4096 gffifo18
gf14 growfiles -W gf14 -b -e 1 -u -i 0 -L 20 -w -l -C 1 -T 10 glseek19 glseek19.2
gf15 growfiles -W gf15 -b -e 1 -u -r 1-49600 -I r -u -i 0 -L 120 Lgfile1
#gf16 growfiles -W gf16 -b -e 1 -i 0 -L 120 -u -g 4090 -T 100 -t 408990 -l -C 10 -c 1000 -S 10 -f Lgf02_
gf17 growfiles -W gf17 -b -e 1 -i 0 -L 120 -u -g 5000 -T 100 -t 499990 -l -C 10 -c 1000 -S 10 -f Lgf03_
gf18 growfiles -W gf18 -b -e 1 -i 0 -L 120 -w -u -r 10-5000 -I r -l -S 2 -f Lgf04_
gf19 growfiles -W gf19 -b -e 1 -g 5000 -i 500 -t 49900 -T10 -c9 -I p -o O_RDWR,O_CREAT,O_TRUNC -u -f gf08i_
gf20 growfiles -W gf20 -D 0 -b -i 0 -L 60 -u -B 1000b -e 1 -r 1-256000:512 -R 512-256000 -T 4 gfbigio-$$
#gf21 growfiles -W gf21 -D 0 -b -i 0 -L 60 -u -B 1000b -e 1 -g 20480 -T 10 -t 20480 gf-bld-$$
#gf22 growfiles -W gf22 -D 0 -b -i 0 -L 60 -u -B 1000b -e 1 -g 20480 -T 10 -t 20480 gf-bldf-$$
gf23 growfiles -W gf23 -D 0 -b -i 0 -L 60 -u -B 1000b -e 1 -r 512-64000:1024 -R 1-384000 -T 4 gf-inf-$$
gf24 growfiles -W gf24 -D 0 -b -i 0 -L 60 -u -B 1000b -e 1 -g 20480 gf-jbld-$$
gf25 growfiles -W gf25 -D 0 -b -i 0 -L 60 -u -B 1000b -e 1 -r 1024000-2048000:2048 -R 4095-2048000 -T 1 gf-large-gs-$$
gf26 growfiles -W gf26 -D 0 -b -i 0 -L 60 -u -B 1000b -e 1 -r 128-32768:128 -R 512-64000 -T 4 gfsmallio-$$
gf27 growfiles -W gf27 -b -D 0 -w -g 8b -C 1 -b -i 1000 -u gfsparse-1-$$
#gf28 growfiles -W gf28 -b -D 0 -w -g 16b -C 1 -b -i 1000 -u gfsparse-2-$$
#gf29 growfiles -W gf29 -b -D 0 -r 1-4096 -R 0-33554432 -i 0 -L 60 -C 1 -u gfsparse-3-$$
gf30 growfiles -W gf30 -D 0 -b -i 0 -L 60 -u -B 1000b -e 1 -o O_RDWR,O_CREAT,O_SYNC -g 20480 -T 10 -t 20480 gf-sync-$$
rwtest01 export LTPROOT; rwtest -N rwtest01 -c -q -i 60s  -f sync 10%25000:rw-sync-$$
rwtest02 export LTPROOT; rwtest -N rwtest02 -c -q -i 60s  -f buffered 10%25000:rw-buffered-$$
rwtest03 export LTPROOT; rwtest -N rwtest03 -c -q -i 60s -n 2  -f buffered -s mmread,mmwrite -m random -Dv 10%25000:mm-buff-$$
rwtest04 export LTPROOT; rwtest -N rwtest04 -c -q -i 60s -n 2  -f sync -s mmread,mmwrite -m random -Dv 10%25000:mm-sync-$$
rwtest05 export LTPROOT; rwtest -N rwtest05 -c -q -i 50 -T 64b 500b:/tmp/rwtest01%f


