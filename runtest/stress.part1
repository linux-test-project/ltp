#DESCRIPTION:Part one for ltpstress.sh
mm01 mmap001 -m 10000
# 40 Mb mmap() test.
# Creates a 10000 page mmap, touches all of the map, sync's it, and
# munmap()s it.
mm02 mmap001
# simple mmap() test.
#mm03 mmap001 -i 0 -I 1 -m 100
# repetitive mmapping test.
# Creates a one page map repetitively for one minute.

mtest01 mtest01 -p80
mtest01w mtest01 -p80 -w

#test for race conditions
mtest05 mmstress
mtest06 mmap1 -x 0.05

mem02 mem02

# Test for mmap() page corruption. This test is meant for
# 1 hour and more. Please change -h(hour), -m(minute) &
# -s(seconds) settings, if default not desired
mmap-corruption01 mmap-corruption01 -h1 -m1 -s1


page01 page01
page02 page02

data_space data_space
stack_space stack_space

shmt02 shmt02
shmt03 shmt03
shmt04 shmt04
shmt05 shmt05
shmt06 shmt06
shmt07 shmt07
shmt08 shmt08
shmt09 shmt09
shmt10 shmt10
fsx-linux export TCbin=$LTPROOT/testcases/bin;fsxtest02 10000
#fsx-ext2 fsxtest $SCRATCHDEV ext2 10000
#fsx-ext3 fsxtest $SCRATCHDEV ext3 10000
#fsx-jfs fsxtest $SCRATCHDEV jfs 10000
#fsx-xfs  fsxtest $SCRATCHDEV xfs 10000
#fsx-reiserfs fsxtest $SCRATCHDEV reiserfs 10000

## Complete a default run.
dio01 diotest1
dio02 diotest2
dio03 diotest3
dio04 diotest4
dio05 diotest5
dio06 diotest6

## Run the tests with larger buffersize
dio07 diotest1 -b 65536
dio08 diotest2 -b 65536
dio09 diotest3 -b 65536
dio10 diotest4 -b 65536
dio11 diotest5 -b 65536
dio12 diotest6 -b 65536

### Run the tests with larger iterations
dio13 diotest1 -b 65536 -n 2000
dio14 diotest2 -b 65536 -i 1000
dio15 diotest3 -b 65536 -i 1000
dio16 diotest5 -b 65536 -i 1000
dio17 diotest6 -b 65536 -i 1000

## Run the tests with larger offset - 1MB
dio18 diotest2 -b 65536 -i 1000 -o 1024000
dio19 diotest3 -b 65536 -i 1000 -o 1024000
dio20 diotest5 -b 65536 -i 1000 -o 1024000
dio21 diotest6 -b 65536 -i 1000 -o 1024000

## Run the tests with larger offset - 100 MB
dio22 diotest2 -b 65536 -i 1000 -o 104857600
dio23 diotest3 -b 65536 -i 1000 -o 104857600
dio24 diotest5 -b 65536 -i 1000 -o 104857600
dio25 diotest6 -b 65536 -i 1000 -o 104857600

### Run tests with larger vector array
dio26 diotest6 -b 8192 -v 100
dio27 diotest6 -b 8192 -o 1024000 -i 1000 -v 100
dio28 diotest6 -b 8192 -o 1024000 -i 1000 -v 200

### Run the tests with more children
#dio29 diotest3 -b 65536 -n 100 -i 1000 -o 1024000
#dio30 diotest6 -b 65536 -n 100 -i 1000 -o 1024000
#
# RAW DEVICE TEST SECTION
#   DEV1 and DEV2 should be exported prior to execution or
# replaced with the actual device ids, i.e.
#   dio33 diotest1 -i /dev/sda2 -o /dev/sda3
#
### Run the tests with raw device
#dio33 diotest1 -i $DEV1 -o $DEV2
#dio34 diotest2 -f $DEV1
#dio36 diotest3 -f $DEV1
#dio37 diotest5 -f $DEV1
#dio38 diotest6 -f $DEV1
#
### Run the tests with raw device and larger iterations
#dio39 diotest1 -b 65536 -n 2000 -i $DEV1 -o $DEV2
#dio40 diotest2 -b 65536 -i 1000 -f $DEV1
#dio41 diotest3 -b 65536 -i 1000 -f $DEV1
#dio42 diotest5 -b 65536 -i 1000 -f $DEV1
#dio43 diotest6 -b 65536 -i 1000 -f $DEV1
#
## Run the tests with raw device and larger offset - 100 MB
#dio44 diotest2 -b 65536 -i 1000 -o 104857600 -f $DEV1
#dio45 diotest3 -b 65536 -i 1000 -o 104857600 -f $DEV1
#dio46 diotest5 -b 65536 -i 1000 -o 104857600 -f $DEV1
#dio47 diotest6 -b 65536 -i 1000 -o 104857600 -f $DEV1

gf01 growfiles -W gf01 -b -e 1 -u -i 0 -L 20 -w -C 1 -l -I r -T 10 glseek20 glseek20.2
gf02 growfiles -W gf02 -b -e 1 -L 10 -i 100 -I p -S 2 -u -f gf03_
gf03 growfiles -W gf03 -b -e 1 -g 1 -i 1 -S 150 -u -f gf05_
gf04 growfiles -W gf04 -b -e 1 -g 4090 -i 500 -t 39000 -u -f gf06_
gf05 growfiles -W gf05 -b -e 1 -g 5000 -i 500 -t 49900 -T10 -c9 -I p -u -f gf07_
gf06 growfiles -W gf06 -b -e 1 -u -r 1-5000 -R 0--1 -i 0 -L 30 -C 1 g_rand10 g_rand10.2
gf07 growfiles -W gf07 -b -e 1 -u -r 1-5000 -R 0--2 -i 0 -L 30 -C 1 -I p g_rand13 g_rand13.2
gf08 growfiles -W gf08 -b -e 1 -u -r 1-5000 -R 0--2 -i 0 -L 30 -C 1 g_rand11 g_rand11.2
gf09 growfiles -W gf09 -b -e 1 -u -r 1-5000 -R 0--1 -i 0 -L 30 -C 1 -I p g_rand12 g_rand12.2
gf10 growfiles -W gf10 -b -e 1 -u -r 1-5000 -i 0 -L 30 -C 1 -I l g_lio14 g_lio14.2
gf11 growfiles -W gf11 -b -e 1 -u -r 1-5000 -i 0 -L 30 -C 1 -I L g_lio15 g_lio15.2
gf12 mkfifo gffifo17; growfiles -W gf12 -b -e 1 -u -i 0 -L 30 gffifo17
gf13 mkfifo gffifo18; growfiles -W gf13 -b -e 1 -u -i 0 -L 30 -I r -r 1-4096 gffifo18
gf14 growfiles -W gf14 -b -e 1 -u -i 0 -L 20 -w -l -C 1 -T 10 glseek19 glseek19.2
gf15 growfiles -W gf15 -b -e 1 -u -r 1-49600 -I r -u -i 0 -L 120 Lgfile1
gf16 growfiles -W gf16 -b -e 1 -i 0 -L 120 -u -g 4090 -T 100 -t 408990 -l -C 10 -c 1000 -S 10 -f Lgf02_
gf17 growfiles -W gf17 -b -e 1 -i 0 -L 120 -u -g 5000 -T 100 -t 499990 -l -C 10 -c 1000 -S 10 -f Lgf03_
gf18 growfiles -W gf18 -b -e 1 -i 0 -L 120 -w -u -r 10-5000 -I r -l -S 2 -f Lgf04_
gf19 growfiles -W gf19 -b -e 1 -g 5000 -i 500 -t 49900 -T10 -c9 -I p -o O_RDWR,O_CREAT,O_TRUNC -u -f gf08i_
gf20 growfiles -W gf20 -D 0 -b -i 0 -L 60 -u -B 1000b -e 1 -r 1-256000:512 -R 512-256000 -T 4 gfbigio-$$
gf21 growfiles -W gf21 -D 0 -b -i 0 -L 60 -u -B 1000b -e 1 -g 20480 -T 10 -t 20480 gf-bld-$$
gf22 growfiles -W gf22 -D 0 -b -i 0 -L 60 -u -B 1000b -e 1 -g 20480 -T 10 -t 20480 gf-bldf-$$
gf23 growfiles -W gf23 -D 0 -b -i 0 -L 60 -u -B 1000b -e 1 -r 512-64000:1024 -R 1-384000 -T 4 gf-inf-$$
gf24 growfiles -W gf24 -D 0 -b -i 0 -L 60 -u -B 1000b -e 1 -g 20480 gf-jbld-$$
gf25 growfiles -W gf25 -D 0 -b -i 0 -L 60 -u -B 1000b -e 1 -r 1024000-2048000:2048 -R 4095-2048000 -T 1 gf-large-gs-$$
gf26 growfiles -W gf26 -D 0 -b -i 0 -L 60 -u -B 1000b -e 1 -r 128-32768:128 -R 512-64000 -T 4 gfsmallio-$$
gf27 growfiles -W gf27 -b -D 0 -w -g 8b -C 1 -b -i 1000 -u gfsparse-1-$$
gf28 growfiles -W gf28 -b -D 0 -w -g 16b -C 1 -b -i 1000 -u gfsparse-2-$$
gf29 growfiles -W gf29 -b -D 0 -r 1-4096 -R 0-33554432 -i 0 -L 60 -C 1 -u gfsparse-3-$$
gf30 growfiles -W gf30 -D 0 -b -i 0 -L 60 -u -B 1000b -e 1 -o O_RDWR,O_CREAT,O_SYNC -g 20480 -T 10 -t 20480 gf-sync-$$
rwtest01 export LTPROOT; rwtest -N rwtest01 -c -q -i 60s  -f sync 10%25000:rw-sync-$$
rwtest02 export LTPROOT; rwtest -N rwtest02 -c -q -i 60s  -f buffered 10%25000:rw-buffered-$$
rwtest03 export LTPROOT; rwtest -N rwtest03 -c -q -i 60s -n 2  -f buffered -s mmread,mmwrite -m random -Dv 10%25000:mm-buff-$$
rwtest04 export LTPROOT; rwtest -N rwtest04 -c -q -i 60s -n 2  -f sync -s mmread,mmwrite -m random -Dv 10%25000:mm-sync-$$
rwtest05 export LTPROOT; rwtest -N rwtest05 -c -q -i 50 -T 64b 500b:/tmp/rwtest01%f

#must be run as root
#iogen01 iogen -i 120s -s read,write 500b:doio.f1.$$ 1000b:doio.f2.$$ | doio -akv -n 2
iogen01 export LTPROOT; rwtest -N iogen01 -i 120s -s read,write -Da -Dv -n 2 500b:doio.f1.$$ 1000b:doio.f2.$$

fs_inod01 fs_inod $TMPDIR 10 10 1
linker01 linktest.sh 1000 1000
openfile01 openfile -f10 -t10
inode01 inode01
inode02 inode02
stream01 stream01
stream02 stream02
stream03 stream03
stream04 stream04
stream05 stream05
ftest01 ftest01
ftest02 ftest02
ftest03 ftest03
ftest04 ftest04
ftest05 ftest05
ftest06 ftest06
ftest07 ftest07
ftest08 ftest08

nfs01 export VERSION=2 SOCKET_TYPE=udp; export TCbin=$LTPROOT/testcases/bin; nfs01
nfs01 export VERSION=2 SOCKET_TYPE=tcp; export TCbin=$LTPROOT/testcases/bin; nfs01
nfs01 export VERSION=3 SOCKET_TYPE=udp; export TCbin=$LTPROOT/testcases/bin; nfs01
nfs01 export VERSION=3 SOCKET_TYPE=tcp; export TCbin=$LTPROOT/testcases/bin; nfs01

nfs02 export VERSION=2 SOCKET_TYPE=udp; export TCbin=$LTPROOT/testcases/bin; nfs02
nfs02 export VERSION=2 SOCKET_TYPE=tcp; export TCbin=$LTPROOT/testcases/bin; nfs02
nfs02 export VERSION=3 SOCKET_TYPE=udp; export TCbin=$LTPROOT/testcases/bin; nfs02
nfs02 export VERSION=3 SOCKET_TYPE=tcp; export TCbin=$LTPROOT/testcases/bin; nfs02

nfs03 export VERSION=2 SOCKET_TYPE=udp; export TCbin=$LTPROOT/testcases/bin; nfs03
nfs03 export VERSION=2 SOCKET_TYPE=tcp; export TCbin=$LTPROOT/testcases/bin; nfs03
nfs03 export VERSION=3 SOCKET_TYPE=udp; export TCbin=$LTPROOT/testcases/bin; nfs03
nfs03 export VERSION=3 SOCKET_TYPE=tcp; export TCbin=$LTPROOT/testcases/bin; nfs03

nfs04 export VERSION=2 SOCKET_TYPE=udp; export TCbin=$LTPROOT/testcases/bin; nfs04
nfs03 export VERSION=2 SOCKET_TYPE=tcp; export TCbin=$LTPROOT/testcases/bin; nfs04
nfs03 export VERSION=3 SOCKET_TYPE=udp; export TCbin=$LTPROOT/testcases/bin; nfs04
nfs03 export VERSION=3 SOCKET_TYPE=tcp; export TCbin=$LTPROOT/testcases/bin; nfs04

nfsstress export VERSION=2 SOCKET_TYPE=udp; export TCbin=$LTPROOT/testcases/network/nfs/nfsstress; nfsstress 20 50 1
nfsstress export VERSION=2 SOCKET_TYPE=tcp; export TCbin=$LTPROOT/testcases/network/nfs/nfsstress; nfsstress 20 50 1
nfsstress export VERSION=3 SOCKET_TYPE=udp; export TCbin=$LTPROOT/testcases/network/nfs/nfsstress; nfsstress 20 50 1
nfsstress export VERSION=3 SOCKET_TYPE=tcp; export TCbin=$LTPROOT/testcases/network/nfs/nfsstress; nfsstress 20 50 1

nfsx-linux export VERSION=2 SOCKET_TYPE=udp; export TCbin=$LTPROOT/testcases/bin; fsx.sh
nfsx-linux export VERSION=2 SOCKET_TYPE=tcp; export TCbin=$LTPROOT/testcases/bin; fsx.sh
nfsx-linux export VERSION=3 SOCKET_TYPE=udp; export TCbin=$LTPROOT/testcases/bin; fsx.sh
nfsx-linux export VERSION=3 SOCKET_TYPE=tcp; export TCbin=$LTPROOT/testcases/bin; fsx.sh


